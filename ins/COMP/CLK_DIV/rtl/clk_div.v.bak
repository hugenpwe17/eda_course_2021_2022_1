// system clock frequence divider
// system clock : 50MHZ
// output clock frequence: 5HZ

module clk_div (
    // input signal system clock
    input clk,
    // input signal reset 
    input rst_n,
    // output signal output clock 
    output reg clk_div
);
	// parameter
	// original clock frequence(HZ)
    parameter feq_ori = 50_000_000;
    // ferquence(HZ) of clock to be output
    parameter feq_out = 5_000_000;
    // half cycle counter
    parameter semi_times = (feq_ori / feq_out) / 2;
    // register length
    parameter width = 32;
    
	// register
    reg [width-1:0] cnt;
	
	// main code
	always @(posedge clk or negedge rst_n) begin
	   if(!rst_n) begin
		   cnt <= {width{1'd0}};
		   // initial clk signal is set to 0/1
		   clk_div <= 1'b0;
		   // clk_div <= 1'b1; 
	   end
	   else if(cnt == semi_times) begin
		   cnt <= {width{1'd0}};
		   clk_div <= ~clk_div;
	   end
	   else begin
		   cnt <= cnt + 1'b1;
		   clk_div <= clk_div;
	   end
	end
    
endmodule